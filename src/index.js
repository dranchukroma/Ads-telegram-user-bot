// adsUserBot/index.js

const { TelegramClient } = require("telegram");
const { StringSession } = require("telegram/sessions");
const schedule = require("node-schedule");
const input = require("input"); // –î–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É –∑–∞–ø—É—Å–∫—É

// --- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ---
const apiId = 123456; // –í–∞—à api_id –∑ my.telegram.org
const apiHash = "your_api_hash"; // –í–∞—à api_hash
const stringSession = new StringSession(""); // –ó–∞–ª–∏—à–∏—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ–º –¥–ª—è –ø–µ—Ä—à–æ–≥–æ –∑–∞–ø—É—Å–∫—É

// –°–ø–∏—Å–æ–∫ –≥—Ä—É–ø (ID –∞–±–æ username)
const groups = [
  -1001234567890, // ID –≥—Ä—É–ø–∏
  "@yourgroupusername"
];

// –°–ø–∏—Å–æ–∫ —Ä–µ–∫–ª–∞–º–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
const messages = [
  "–°–ø—Ä–æ–±—É–π –Ω–∞—à —Å–µ—Ä–≤—ñ—Å! üî•",
  "–¢—ñ–ª—å–∫–∏ —Å—å–æ–≥–æ–¥–Ω—ñ ‚Äî –∑–Ω–∏–∂–∫–∞ –Ω–∞ –ø—ñ–¥–ø–∏—Å–∫—É!",
  "–î–æ–ª—É—á–∞–π—Å—è –¥–æ –Ω–∞—à–æ–≥–æ –±–æ—Ç–∞ –¥–ª—è –ø–æ—à—É–∫—É!"
];

// –î–Ω—ñ —Ç–∏–∂–Ω—è –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏ (0 ‚Äî –Ω–µ–¥—ñ–ª—è, 6 ‚Äî —Å—É–±–æ—Ç–∞)
const daysOfWeek = [1, 3, 5]; // –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –ø–æ–Ω–µ–¥—ñ–ª–æ–∫, —Å–µ—Ä–µ–¥–∞, –ø‚Äô—è—Ç–Ω–∏—Ü—è

let randomMode = true; // –ü–µ—Ä–µ–º–∏–∫–∞—á —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É

(async () => {
  console.log("–ó–∞–ø—É—Å–∫ userBot...");

  const client = new TelegramClient(stringSession, apiId, apiHash, {
    connectionRetries: 5,
  });

  await client.start({
    phoneNumber: async () => await input.text("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: "),
    password: async () => await input.text("–í–≤–µ–¥—ñ—Ç—å 2FA –ø–∞—Ä–æ–ª—å: "),
    phoneCode: async () => await input.text("–í–≤–µ–¥—ñ—Ç—å –∫–æ–¥ –∑ Telegram: "),
    onError: (err) => console.log(err),
  });

  console.log("–ë–æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π!");
  console.log("StringSession:", client.session.save()); // –ó–±–µ—Ä–µ–∂—ñ—Ç—å —Ü–µ –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –∑–∞–ø—É—Å–∫—ñ–≤

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É –≤–∏–ø–∞–¥–∫–æ–≤—É –≥—Ä—É–ø—É
  async function sendRandomMessage() {
    for (const group of groups) {
      const randomMsg = messages[Math.floor(Math.random() * messages.length)];
      try {
        await client.sendMessage(group, { message: randomMsg });
        console.log(`–í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ —É ${group}: ${randomMsg}`);
      } catch (e) {
        console.error(`–ü–æ–º–∏–ª–∫–∞ –¥–ª—è –≥—Ä—É–ø–∏ ${group}:`, e.message);
      }
    }
  }

  // –ü–ª–∞–Ω—É–≤–∞–Ω–Ω—è —Ä–æ–∑—Å–∏–ª–∫–∏
  function scheduleMessages() {
    // –°–∫–∞—Å—É–≤–∞—Ç–∏ –≤—Å—ñ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –∑–∞–¥–∞—á—ñ
    schedule.gracefulShutdown();

    if (randomMode) {
      // –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è —Ç–∏–∂–Ω—è
      daysOfWeek.forEach((day) => {
        // –í–∏–ø–∞–¥–∫–æ–≤–∏–π —á–∞—Å (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –º—ñ–∂ 10:00 —ñ 20:00)
        const hour = Math.floor(Math.random() * 10) + 10;
        const minute = Math.floor(Math.random() * 60);

        schedule.scheduleJob({ dayOfWeek: day, hour, minute }, sendRandomMessage);
        console.log(`–ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ –Ω–∞ –¥–µ–Ω—å ${day}, ${hour}:${minute}`);
      });
    }
  }

  // –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω—É–≤–∞–Ω–Ω—è
  scheduleMessages();

  // –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è randomMode —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å –∞–±–æ —Ñ–∞–π–ª
})();